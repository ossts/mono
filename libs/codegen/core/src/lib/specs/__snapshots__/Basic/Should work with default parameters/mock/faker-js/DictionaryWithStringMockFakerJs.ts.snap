/* istanbul ignore file */
import { faker as fakerDefault } from '@faker-js/faker';

import { DictionaryWithString } from '../../common/models';
import { abstractGenerateFn, createCallStack } from './helpersMockFakerJs';
import type {
  MockFakerJSGeneratorParams,
  MockFakerJSGeneratorParamsMode,
  ModelOrIdNullable,
} from './typesMockFakerJs';

export function getDictionaryWithStringMockFakerJs<
  TMode extends 'standalone' = 'standalone',
>(params?: MockFakerJSGeneratorParams<TMode>): DictionaryWithString | null {
  const modelName = 'DictionaryWithString';

  const {
    faker = fakerDefault,
    fakerParams: { probability } = {},
    mode = 'standalone',
    callStack = createCallStack(),
  } = params ?? {};

  const callCount = callStack.entriesCallCount.get(modelName) ?? 0;
  if (callCount > 10) return null;

  const result: DictionaryWithString = {
    [faker.string.alpha({
      length: {
        min: 2,
        max: 10,
      },
    })]: faker.helpers.maybe(
      () => faker.string.alpha({ length: { min: 2, max: 10 } }),
      {
        probability,
      },
    ),
  };

  return result;
}
