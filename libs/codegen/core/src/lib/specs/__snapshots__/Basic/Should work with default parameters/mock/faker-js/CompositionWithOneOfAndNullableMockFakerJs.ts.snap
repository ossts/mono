/* istanbul ignore file */
import { faker as fakerDefault } from '@faker-js/faker';

import { getModelWithArrayMockFakerJs } from './ModelWithArrayMockFakerJs';
import { getModelWithDictionaryMockFakerJs } from './ModelWithDictionaryMockFakerJs';
import { getModelWithEnumMockFakerJs } from './ModelWithEnumMockFakerJs';
import type { MockFakerJSGeneratorParams } from './typesMockFakerJs';

export const getCompositionWithOneOfAndNullableMockFakerJs = (
  params: MockFakerJSGeneratorParams
) => {
  const { faker = fakerDefault } = params;

  return {
    propA: faker.helpers.maybe(() =>
      faker.helpers.arrayElement([
        faker.helpers.arrayElement([
          { boolean: faker.helpers.maybe(() => faker.datatype.boolean()) },
          getModelWithEnumMockFakerJs(params),
          getModelWithArrayMockFakerJs(params),
          getModelWithDictionaryMockFakerJs(params),
        ]),
        null,
      ])
    ),
  };
};
