/* istanbul ignore file */
import { faker as fakerDefault } from '@faker-js/faker';

import { CompositionWithOneOfAndNullable } from '../../common/models';
import { getModelWithArrayMockFakerJs } from './ModelWithArrayMockFakerJs';
import { getModelWithDictionaryMockFakerJs } from './ModelWithDictionaryMockFakerJs';
import { getModelWithEnumMockFakerJs } from './ModelWithEnumMockFakerJs';
import { abstractGenerateFn, createCallStack } from './helpersMockFakerJs';
import type {
  MockFakerJSGeneratorParams,
  MockFakerJSGeneratorParamsMode,
  ModelOrIdNullable,
} from './typesMockFakerJs';

export function getCompositionWithOneOfAndNullableMockFakerJs<
  TMode extends 'withReferences',
>(
  params?: MockFakerJSGeneratorParams<TMode>,
): ModelOrIdNullable<CompositionWithOneOfAndNullable> | null;

export function getCompositionWithOneOfAndNullableMockFakerJs<
  TMode extends 'standalone',
>(
  params?: MockFakerJSGeneratorParams<TMode>,
): CompositionWithOneOfAndNullable | null;

export function getCompositionWithOneOfAndNullableMockFakerJs<
  TMode extends 'primaryKey',
>(params?: MockFakerJSGeneratorParams<TMode>): number | null;

export function getCompositionWithOneOfAndNullableMockFakerJs<
  TMode extends MockFakerJSGeneratorParamsMode = 'withReferences',
>(
  params: MockFakerJSGeneratorParams<TMode> = {},
): ModelOrIdNullable<CompositionWithOneOfAndNullable> | null {
  const modelName = 'CompositionWithOneOfAndNullable';

  const { faker = fakerDefault, fakerParams: { probability } = {} } = params;

  return abstractGenerateFn<CompositionWithOneOfAndNullable, TMode>(
    modelName,
    params,
    (callStack) => ({
      propA: faker.helpers.maybe(
        () =>
          faker.helpers.arrayElement([
            faker.helpers.arrayElement([
              {
                boolean: faker.helpers.maybe(() => faker.datatype.boolean(), {
                  probability,
                }),
              }, // eslint-disable-next-line @typescript-eslint/no-explicit-any
              getModelWithEnumMockFakerJs<any>({
                ...params,
                callStack: createCallStack(callStack, modelName),
              }), // eslint-disable-next-line @typescript-eslint/no-explicit-any
              getModelWithArrayMockFakerJs<any>({
                ...params,
                callStack: createCallStack(callStack, modelName),
              }), // eslint-disable-next-line @typescript-eslint/no-explicit-any
              getModelWithDictionaryMockFakerJs<any>({
                ...params,
                callStack: createCallStack(callStack, modelName),
              }),
            ]),
            null,
          ]),
        {
          probability,
        },
      ),
    }),
  );
}
