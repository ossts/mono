/* istanbul ignore file */
import type { ModelWithArray } from './ModelWithArray';
import type { ModelWithDictionary } from './ModelWithDictionary';
import type { ModelWithEnum } from './ModelWithEnum';
import type { ModelWithString } from './ModelWithString';

export namespace ComplexOperationsParams {
  export namespace ComplexTypes {
    export type Query = {
      parameterObject: {
        first?: {
          second?: {
            third?: string;
          };
        };
      };
      parameterReference: ModelWithString;
    };
  }

  export namespace ComplexParams {
    export type Path = {
      id: number;
      requestBody: {
        readonly key: string | null;
        name: string | null;
        enabled: boolean;
        readonly type: 'Monkey' | 'Horse' | 'Bird';
        listOfModels?: Array<ModelWithString> | null;
        listOfStrings?: Array<string> | null;
        parameters:
          | ModelWithString
          | ModelWithEnum
          | ModelWithArray
          | ModelWithDictionary;
        readonly user?: {
          readonly id?: number;
          readonly name?: string | null;
        };
      };
    };
  }
}
