name: Release

on:
  push:
    branches:
      - release/*

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

permissions: write-all

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'skip ci') }}
    steps:
      - uses: actions/checkout@v4

      - name: Extract branch data
        uses: actions/github-script@v7
        id: branchData
        with:
          script: |
            const [refName, version] = "${{github.ref_name}}".split('--');
            const name = refName.split('/')[1];

            let type;
            if (version) {
              if (version.endsWith('.x')) {
                type = 'maintenance';
              } else {
                type = 'pre-release';
              }
            }

            return { name, version, type };

      - name: Extract branch name
        uses: actions/github-script@v7
        id: project
        with:
          script: |
            const { name } = JSON.parse('${{ steps.branchData.outputs.result }}');

            return name;

    outputs:
      branchData: ${{steps.branchData.outputs.result}}
      project: ${{steps.project.outputs.result}}

  build:
    runs-on: ubuntu-latest
    needs:
      - prepare
    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # Uncomment this line to enable task distribution
      - run: pnpm dlx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          check-latest: true
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile
      - uses: nrwl/nx-set-shas@v4

      - run: pnpm exec nx build ${{ needs.prepare.outputs.project }}

      - uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: 'dist/**/*'

  agents:
    name: Nx Cloud - Agents
    needs:
      - prepare
    uses: nrwl/ci/.github/workflows/nx-cloud-agents.yml@v0.15.0
    with:
      number-of-agents: 3

  # release result of NX Cloud build
  release:
    name: Release
    needs:
      - prepare
      - build
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.SECRET_KEY }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          check-latest: true
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          name: build-artifacts

      - name: List artifacts
        run: ls -R dist/
        shell: bash

      - name: Run release
        uses: actions/github-script@v7
        with:
          script: |
            const { name } = JSON.parse('${{ needs.prepare.outputs.branchData }}');
            await exec.exec(`pnpm nx release ${name} --verbose`)

      # https://octokit.github.io/rest.js/v19#repos-merge
      # - name: Merge changes into default branch
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       const { version } = JSON.parse('${{ needs.prepare.outputs.branchData }}');
      #       if (version) return;

      #       github.rest.repos.merge({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         base: '${{github.event.repository.default_branch}}',
      #         head: '${{github.ref_name}}',
      #       });
